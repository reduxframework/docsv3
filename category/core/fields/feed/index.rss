<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Fields &#8211; Redux Documentation</title>
	<atom:link href="https://docs.reduxframework.com/category/core/fields/feed/" rel="self" type="application/rss+xml" />
	<link>https://docs.reduxframework.com</link>
	<description>Docs for the Redux Framework</description>
	<lastBuildDate>Tue, 31 Jul 2018 15:27:44 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.0.3</generator>
	<item>
		<title>Palette Color</title>
		<link>https://docs.reduxframework.com/core/fields/palette-color/</link>
		<comments>https://docs.reduxframework.com/core/fields/palette-color/#respond</comments>
		<pubDate>Wed, 26 Aug 2015 03:53:21 +0000</pubDate>
		<dc:creator><![CDATA[Kevin]]></dc:creator>
				<category><![CDATA[Fields]]></category>
		<category><![CDATA[class]]></category>
		<category><![CDATA[color palette]]></category>
		<category><![CDATA[compiler]]></category>
		<category><![CDATA[default]]></category>
		<category><![CDATA[desc]]></category>
		<category><![CDATA[hint]]></category>
		<category><![CDATA[id]]></category>
		<category><![CDATA[palette]]></category>
		<category><![CDATA[palettes]]></category>
		<category><![CDATA[required]]></category>
		<category><![CDATA[subtitle]]></category>
		<category><![CDATA[title]]></category>

		<guid isPermaLink="false">https://docs.reduxframework.com/?p=1101</guid>
		<description><![CDATA[<p>The Palette Color field allows you to display a set of color palettes that a theme or plugin might use throughout, giving your users a choice of UI colors. Arguments Name Type Default Description type string &#8216;palette&#8217; Value identifying the field type. id string Unique ID identifying the field. Must be different from all other [&#8230;]</p>
<p>The post <a rel="nofollow" href="https://docs.reduxframework.com/core/fields/palette-color/">Palette Color</a> appeared first on <a rel="nofollow" href="https://docs.reduxframework.com">Redux Documentation</a>.</p>
]]></description>
				<content:encoded><![CDATA[<p style="text-align: left;">The Palette Color field allows you to display a set of color palettes that a theme or plugin might use throughout, giving your users a choice of UI colors.</p>
<p style="text-align: center;"><a href="https://docs.reduxframework.com/wp-content/uploads/sites/4/2015/08/palette.png"><img class="alignnone size-full wp-image-1107" src="https://docs.reduxframework.com/wp-content/uploads/sites/4/2015/08/palette.png" alt="palette" width="1004" height="297" srcset="https://docs.reduxframework.com/wp-content/uploads/sites/4/2015/08/palette.png 1004w, https://docs.reduxframework.com/wp-content/uploads/sites/4/2015/08/palette-300x89.png 300w, https://docs.reduxframework.com/wp-content/uploads/sites/4/2015/08/palette-60x18.png 60w, https://docs.reduxframework.com/wp-content/uploads/sites/4/2015/08/palette-150x44.png 150w" sizes="(max-width: 1004px) 100vw, 1004px" /></a></p>
<hr />
<h3 style="text-align: left;">Arguments</h3>
<table border="0">
<tbody>
<tr>
<td style="text-align: center;"><strong>Name</strong></td>
<td style="text-align: center;"><strong>Type</strong></td>
<td style="text-align: center;"><strong>Default</strong></td>
<td style="text-align: center;"><strong>Description</strong></td>
</tr>
<tr>
<td>type</td>
<td>string</td>
<td>&#8216;palette&#8217;</td>
<td>Value identifying the field type.</td>
</tr>
<tr>
<td>id</td>
<td>string</td>
<td></td>
<td>Unique ID identifying the field. Must be different from all other field IDs.</td>
</tr>
<tr>
<td>title</td>
<td>string</td>
<td></td>
<td>Displays title of the option.</td>
</tr>
<tr>
<td>subtitle</td>
<td>string</td>
<td></td>
<td>Subtitle display of the option, situated beneath the title.</td>
</tr>
<tr>
<td>desc</td>
<td>string</td>
<td></td>
<td>Description of the option, appearing beneath the field control.</td>
</tr>
<tr>
<td>class</td>
<td>string</td>
<td></td>
<td>Appends any number of classes to the field&#8217;s class attribute.</td>
</tr>
<tr>
<td>compiler</td>
<td>bool/array</td>
<td></td>
<td>Flag to run the compiler hook or array of CSS selectors to pass dynamic CSS to the compiler hook. <a class="more_info" href="/redux-framework/integrating-a-compiler/"><i class="el-icon-circle-arrow-right"></i> More info</a></td>
</tr>
<tr>
<td>required</td>
<td>array</td>
<td></td>
<td>Provide the parent, comparison operator, and value which affects the field&#8217;s visibility. <a class="more_info" href="/redux-framework/the-basics/the-required-argument/"><i class="el-icon-circle-arrow-right"></i> More info</a></td>
</tr>
<tr>
<td>palettes</td>
<td>array</td>
<td></td>
<td> An array of individual arrays defining the color palettes.  See &#8220;Setting Palettes&#8221; below.</td>
</tr>
<tr>
<td>default</td>
<td>string</td>
<td></td>
<td>They key of the default palettes array to set as default.</td>
</tr>
<tr>
<td>hint</td>
<td>array</td>
<td></td>
<td>Array containing the <code>content</code> and optional <code>title</code> arguments for the hint tooltip. <a class="more_info" title="Using Hints in Fields" href="/redux-framework/the-basics/using-hints-in-fields/"><i class="el-icon-circle-arrow-right"></i> More info</a></td>
</tr>
</tbody>
</table>
<ul class="more_info_list">
<li><a class="more_info" title="The ‘Required’ Argument" href="/redux-framework/the-basics/the-required-argument/"><i class="el-icon-circle-arrow-right"></i> Using the Required Argument</a></li>
<li><a class="more_info" title="Integrating a Compiler" href="/redux-framework/integrating-a-compiler/"><i class="el-icon-circle-arrow-right"></i> Using the Compiler Argument</a></li>
<li><a class="more_info" title="Using Hints in Fields" href="/redux-framework/the-basics/using-hints-in-fields/"><i class="el-icon-circle-arrow-right"></i> Using Hints</a></li>
</ul>
<h3>Setting Palettes</h3>
<p>Each palette in the palettes argument is a key/pair array that defines each individual palette.  The key of the array is the palette name.  Assigned to the key is an array of hex colors to be displayed in the palette entry.  See the example below for a complete breakdown.</p>
<hr />
<h3>Example Declaration</h3>
<pre class="brush: php; title: ; notranslate">
Redux::setSection( $opt_name, array(
    'title'      =&gt; __( 'Palette Colors', 'redux-framework-demo' ),
    'desc'       =&gt; __( 'For full documentation on this field, visit: ', 'redux-framework-demo' ) . '&lt;a href=&quot;//docs.reduxframework.com/core/fields/palette-color/&quot; target=&quot;_blank&quot;&gt;docs.reduxframework.com/core/fields/palette-color/&lt;/a&gt;',
    'id'         =&gt; 'color-palette',
    'subsection' =&gt; true,
    'fields'     =&gt; array(
        array(
            'id'       =&gt; 'opt-palette-color',
            'type'     =&gt; 'palette',
            'title'    =&gt; __( 'Palette Color Option', 'redux-framework-demo' ),
            'subtitle' =&gt; __( 'Only color validation can be done on this field type', 'redux-framework-demo' ),
            'desc'     =&gt; __( 'This is the description field, again good for additional info.', 'redux-framework-demo' ),
            'default'  =&gt; 'red',
            'palettes' =&gt; array(
                'red'  =&gt; array(
                    '#ef9a9a',
                    '#f44336',
                    '#ff1744',
                ),
                'pink' =&gt; array(
                    '#fce4ec',
                    '#f06292',
                    '#e91e63',
                    '#ad1457',
                    '#f50057',
                ),
                'cyan' =&gt; array(
                    '#e0f7fa',
                    '#80deea',
                    '#26c6da',
                    '#0097a7',
                    '#00e5ff',
                ),
            )
        ),
    )
) );

</pre>
<h3>Example Usage</h3>
<p>This example in based on the example usage provided above. Be sure to change <code>$redux_demo</code> to the value you specified in your <a title="opt_name" href="/redux-framework/arguments/opt_name/"><code>opt_name</code> argument.  </a></p>
<p>This field does NOT return the palette array.  It returns the name of the selected palette.  Ideally, the developer will have set the palette colors in their CSS, using the palette key name as the CSS selector.</p>
<pre class="brush: php; title: ; notranslate">
global $redux_demo;

echo 'Selected palette: ' . $redux_demo['opt-palette-color'];

// Selected palette: red 
</pre>
<p>The post <a rel="nofollow" href="https://docs.reduxframework.com/core/fields/palette-color/">Palette Color</a> appeared first on <a rel="nofollow" href="https://docs.reduxframework.com">Redux Documentation</a>.</p>
]]></content:encoded>
			<wfw:commentRss>https://docs.reduxframework.com/core/fields/palette-color/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>callback</title>
		<link>https://docs.reduxframework.com/core/fields/callback/</link>
		<comments>https://docs.reduxframework.com/core/fields/callback/#respond</comments>
		<pubDate>Thu, 02 Apr 2015 04:19:19 +0000</pubDate>
		<dc:creator><![CDATA[Kevin]]></dc:creator>
				<category><![CDATA[Fields]]></category>
		<category><![CDATA[callback]]></category>

		<guid isPermaLink="false">http://docs.reduxframework.com/?p=960</guid>
		<description><![CDATA[<p>coming soon!</p>
<p>The post <a rel="nofollow" href="https://docs.reduxframework.com/core/fields/callback/">callback</a> appeared first on <a rel="nofollow" href="https://docs.reduxframework.com">Redux Documentation</a>.</p>
]]></description>
				<content:encoded><![CDATA[<p>coming soon!</p>
<p>The post <a rel="nofollow" href="https://docs.reduxframework.com/core/fields/callback/">callback</a> appeared first on <a rel="nofollow" href="https://docs.reduxframework.com">Redux Documentation</a>.</p>
]]></content:encoded>
			<wfw:commentRss>https://docs.reduxframework.com/core/fields/callback/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>The Redux API</title>
		<link>https://docs.reduxframework.com/core/redux-api/</link>
		<comments>https://docs.reduxframework.com/core/redux-api/#comments</comments>
		<pubDate>Wed, 01 Apr 2015 19:26:09 +0000</pubDate>
		<dc:creator><![CDATA[Dovy]]></dc:creator>
				<category><![CDATA[Advanced]]></category>
		<category><![CDATA[Core]]></category>
		<category><![CDATA[Fields]]></category>
		<category><![CDATA[Sections]]></category>
		<category><![CDATA[Support]]></category>
		<category><![CDATA[The Basics]]></category>
		<category><![CDATA[api]]></category>
		<category><![CDATA[getArgs]]></category>
		<category><![CDATA[getExtensions]]></category>
		<category><![CDATA[getField]]></category>
		<category><![CDATA[getSection]]></category>
		<category><![CDATA[init]]></category>
		<category><![CDATA[redux api]]></category>
		<category><![CDATA[setArgs]]></category>
		<category><![CDATA[setExtensions]]></category>
		<category><![CDATA[setField]]></category>
		<category><![CDATA[setHelpSidebar]]></category>
		<category><![CDATA[setHelpTab]]></category>
		<category><![CDATA[setSection]]></category>
		<category><![CDATA[setSections]]></category>

		<guid isPermaLink="false">http://docs.reduxframework.com/?p=942</guid>
		<description><![CDATA[<p>With Redux 3.5+, we&#8217;ve completely redesigned the way in which config files for Redux Framework options panels are created.  In the past, the process involved creating a PHP class, dividing the declaration of arguments, help tabs, and section into different functions and feeding them into a new instance of the Redux Framework object (see sample-config-legacy.php [&#8230;]</p>
<p>The post <a rel="nofollow" href="https://docs.reduxframework.com/core/redux-api/">The Redux API</a> appeared first on <a rel="nofollow" href="https://docs.reduxframework.com">Redux Documentation</a>.</p>
]]></description>
				<content:encoded><![CDATA[<p>With Redux 3.5+, we&#8217;ve completely redesigned the way in which config files for Redux Framework options panels are created.  In the past, the process involved creating a PHP class, dividing the declaration of arguments, help tabs, and section into different functions and feeding them into a new instance of the Redux Framework object (see <a href="https://github.com/reduxframework/redux-framework/blob/master/sample/sample-config-legacy.php"><code>sample-config-legacy.php</code></a> in the sample folder for a more detailed analysis).  The biggest drawback to this method was the name of the class.  Each needed to be unique among multiple instances of Redux.  This causes many headaches for developers, and by extension, the Redux support team.</p>
<p>With the Redux API, no longer is this an issue.  The process has been streamlined into a handful of API calls, without the hassles of ensuring unique class names, and understanding of how PHP classes work.</p>
<p>If reviewing documentation isn&#8217;t your thing, you are always free to jump directly to the updated <a href="https://github.com/reduxframework/redux-framework/blob/master/sample/sample-config.php"><code>sample-config.php</code></a> in the sample folder of the Redux Framework package to see how it&#8217;s all put together.</p>
<h2>The Basic API</h2>
<p>The API is wrtten as a <a href="http://php.net/manual/en/language.oop5.static.php">static class</a>.  Don&#8217;t worry, you don&#8217;t need any knowledge of static classes, only how to call them, which is done with the class name, two semicolons, and the function name as demonstrated in the examples below.</p>
<p>Ideally, a basic Redux Framework config file will use three or four basic API calls to create the standard options panel.  We&#8217;ll begin with the suggested order in which to use them.</p>
<p>First, it&#8217;s always a good idea to check that the API class exists.  it avoids potential errors in the event an older version of Redux is still in use on your site by a different dev or vendor.  The following should be the first lines in your config file:</p>
<pre class="brush: php; title: ; notranslate">
if ( ! class_exists( 'Redux' ) ) {
    return;
}
</pre>
<p>Next, set the <code>opt_name</code> variable of your panel to a variable. It&#8217;s easier to set the <code>opt_name</code> in the fashion as it is used for each and every Redux API call. The next line in our example config would be as follows:</p>
<pre class="brush: php; title: ; notranslate">
// Remember, 'redux_demo' is stricly for this example.  
// Please change it to your own unique name.
$opt_name = &quot;redux_demo&quot;;
</pre>
<p>Remember, the classname of the Redux API is titled <code>Redux</code>. To call the function, two semi-colons follow the classname, and then the actual API call.</p>
<p>Now, we&#8217;ll begin with the first API call, Redux::setArgs</p>
<h3>setArgs</h3>
<p><code>Redux::setArgs ($opt_name, $args)</code></p>
<p>The setArgs API requires two parameters, the <code>opt_name</code> string value and the actual <a href="/core/arguments/" title="Global Arguments">arguments</a>, an array value. </p>
<p>Here is an example:</p>
<pre class="brush: php; title: ; notranslate">
$args = Array(
    'opt_name'    =&gt; $opt_name,
    // Any other arguments you wish to set.  To save space in this example
    // please refer to the arguments documentation, or review the
    // sample-config.php file
);

Redux::setArgs ($opt_name, $args);
</pre>
<p>The next two APIs deal with setting the help tabs and sidebar of the admin panel when the Redux Framework options panel is visible.</p>
<h3>setHelpTab</h3>
<p><code>Redux::setHelpTab ($opt_name, $tabs)</code></p>
<p>setHelpTab requires two parameters, the <code>$opt_name</code> string value, followed by an array value of tab data.</p>
<pre class="brush: php; title: ; notranslate">
$tabs = array(
    array(
        'id'      =&gt; 'redux-help-tab-1',
        'title'   =&gt; 'Theme Information 1',
        'content' =&gt; '&lt;br /&gt;This is the tab content, HTML is allowed.&lt;br /&gt;')
    ),
    array(
        'id'      =&gt; 'redux-help-tab-2',
        'title'   =&gt; 'Theme Information 2',
        'content' =&gt; '&lt;br /&gt;This is the tab content, HTML is allowed.&lt;br /&gt;')
    )
);
Redux::setHelpTab( $opt_name, $tabs );
</pre>
<h3>setHelpSidebar</h3>
<p><code>Redux::setHelpSidebar ($opt_name, $content)</code></p>
<p>setHelpSidebar requires two parameters. First, the <code>$opt_name</code> string value, the second, the <code>$content</code> string value.</p>
<pre class="brush: php; title: ; notranslate">
$content = '&lt;br /&gt;This is the sidebar content, HTML is allowed.&lt;br /&gt;');
Redux::setHelpSidebar( $opt_name, $content );
</pre>
<p>Now it&#8217;s time to set our sections.</p>
<h3>setSection</h3>
<p><code>Redux::setSection ($opt_name, $sections)</code></p>
<p>setSections requires two parameters. First, the <code>$opt_name</code> string value, the second, an array of section data.</p>
<p>Each call to the setSection API will create a section tab (or subsection of a section) in the options panel.</p>
<pre class="brush: php; title: ; notranslate">
// Lets create a section with no subsections, a basic section, if you will.
$section = array(
    'title'  =&gt; 'Basic Field',
    'id'     =&gt; 'basic',
    'desc'   =&gt; '',
    'icon'   =&gt; 'el el-home'   
    'fields' =&gt; array(
        array(
            'id'       =&gt; 'opt-text-example',
            'type'     =&gt; 'text',
            'title'    =&gt; 'Text Field',
            'subtitle' =&gt; 'Subtitle',
            'desc'     =&gt; 'Field Description',
            'default'  =&gt; 'Default Text',
        ),    
    )
);
Redux::setSection($opt_name, $section);

// Now let's create a section with two subsections
// First, create the parent panel.
$section = array(
    'title' =&gt; 'Basic Subsection Fields',
    'id'    =&gt; 'basic-subsection',
    'desc'  =&gt; '',
    'icon'  =&gt; 'el el-home'   
    )
);
Redux::setSection($opt_name, $section);

// The first subsection
$section = array(
    'title'      =&gt; 'Text Field',
    'id'         =&gt; 'basic-text-subsection',
    'subsection' =&gt; true,
    'desc'       =&gt; '',
    'fields'     =&gt; array(
        array(
            'id'       =&gt; 'opt-text-subsection-example',
            'type'     =&gt; 'text',
            'title'    =&gt; 'Text Field',
            'subtitle' =&gt; 'Subtitle',
            'desc'     =&gt; 'Field Description',
            'default'  =&gt; 'Default Text',
        ),        
    )
);
Redux::setSection($opt_name, $section);

// The second subsection
$section = array(
    'title'      =&gt; 'Checkbox Field',
    'id'         =&gt; 'basic-checkbox-subsection',
    'subsection' =&gt; true,
    'desc'       =&gt; '',
    'fields'     =&gt; array(
        array(
            'id'       =&gt; 'opt-checkbox-subsection-example',
            'type'     =&gt; 'checkbox',
            'title'    =&gt; 'Checkbox Field',
            'subtitle' =&gt; 'Subtitle',
            'desc'     =&gt; 'Field Description',
            'default'  =&gt; '1'
        ),        
    )
);
Redux::setSection($opt_name, $section);
</pre>
<h3>setExtensions</h3>
<p><code>Redux::setExtensions($opt_name, $path)</code></p>
<p>If you are a user of <a href="https://reduxframework.com/extensions/" target="_blank">Redux Extensions</a> (and why wouldn&#8217;t you be? We offer several that take Redux Framework to a whole new level!) the Redux API makes including them in your project a one-liner breeze! No more loader files and setting variables within them, as per the &#8216;old way&#8217;.</p>
<p>setExtensions requires two parameters. First, the <code>$opt_name</code> string value, the second, the path to either a single extension or a folder of extensions. This API may be used multiple times, if needed.</p>
<pre class="brush: php; title: ; notranslate">
// You will need to determine the specific path to 
// wherever you choose to keep your extensions folder.

// For this example, we're assuming it's in the same 
// directory as our config file.
$ext_path = dirname( __FILE__ ) . '/extensions/';
Redux::setExtensions($opt_name, $ext_path);
</pre>
<h2>The Advanced API</h2>
<p>For the advanced developer already familiar with PHP and Redux as a whole, we offer some more advanced API to make your programming tasks a bit easier.</p>
<h3>init</h3>
<p><code>Redux::init($opt_name)</code></p>
<p>init requires one parameter, the <code>$opt_name</code> string value. The API is useful in cases where a force load of the Redux object is neccessary, even if it&#8217;s already been run.</p>
<h3>setSections</h3>
<p><code>Redux::setSections($opt_name, $sections)</code></p>
<p>setSections requires two parameters. First, the <code>$opt_name</code> string value, the second, an array of section data. This API is similar to setSection, with the noted difference of this particular API allowing for the setting of a group of sections in one call.</p>
<h3>getSection</h3>
<p><code>Redux::getSection($opt_name, $id)</code></p>
<p>getSection requires two parameters. First, the <code>$opt_name</code> string value, the second, the string id of the section to retrieve. The return value is an array of the requested section, or false on failure.</p>
<h3>removeSection</h3>
<p><code>Redux::removeSection($opt_name, $id, $all_fields)</code></p>
<p>removeSection requires two parameters. First, the <code>$opt_name</code> string value, the second, the string id of the section to remove. The optional third variable is a boolean. If set, all fields associated to that section will also be removed from the API, though if left they will never be initialized. They are simply left if you were to make changes to them as needed.</p>
<h3>hideSection</h3>
<p><code>Redux::hideSection($opt_name, $id, $hide)</code></p>
<p>hideSection requires two parameters. First, the <code>$opt_name</code> string value, the second, the string id of the section to hide. The optional third variable <code>$hide</code> is a boolean used to set the visibility, in the situation where you may want to reverse this function and show the section. By default, it can be omitted and it is set to true.</p>
<h3>getField</h3>
<p><code>Redux::getField($opt_name, $id)</code></p>
<p>getField requires two parameters. First, the <code>$opt_name</code> string value, the second, the string id of the field to retrieve. The return value is an array of the requested field, or false on failure.</p>
<h3>setField</h3>
<p><code>Redux::setField($opt_name, $field)</code></p>
<p>setField requires two parameters. First, the <code>$opt_name</code> string value, the second, an array of field data.  Be sure to add the key/pair <code>'section_id' => "id of section"</code> (replace &#8220;id of section&#8221; with the actual section ID) to your field array.  This is necessary so the field is set to the correct section.</p>
<h3>removeField</h3>
<p><code>Redux::removeField($opt_name, $id)</code></p>
<p>removeField requires two parameters. First, the <code>$opt_name</code> string value, the second, the string id of the field to remove.</p>
<h3>hidefield</h3>
<p><code>Redux::hideField($opt_name, $id, $hide)</code></p>
<p>hideField requires two parameters. First, the <code>$opt_name</code> string value, the second, the string id of the field to hide. The optional third variable <code>$hide</code> is a boolean used to set the visibility, in the situation where you may want to reverse this function and show the field. By default, it can be omitted and it is set to true.</p>
<h3>getArgs</h3>
<p><code>Redux::getArgs($opt_name)</code></p>
<p>getArgs requires one parameters, the <code>$opt_name</code> string value. The return value is an array of global arguments.</p>
<h3>getArg</h3>
<p><code>Redux::getArg($opt_name, $key)</code></p>
<p>getArg requires two parameters. First, the <code>$opt_name</code> string value, the second, the string name of the argument to retrieve. The return value is the value of the requested argument, or empty on failure.</p>
<h3>getExtensions</h3>
<p><code>Redux::getExtensions($opt_name, $key)</code></p>
<p>getExtensions requires one of two parameters, depending on the desired return value: </p>
<p><strong>An array of all loaded extensions</strong><br />
Use the first parameter and specify the <code>$opt_name</code> string. The return value is an array of loaded extensions containing key/pair information of <code>path</code> (the path to the extension) and <code>class</code> (the classname of the extension). On failure, false is returned.</p>
<p><strong>The path to a specific extension</strong><br />
First, pass an empty string for the first parameter. This is necessary, otherwise the return value will be the one indicated above. For the second parameter, specify the key name of the desired extension. The return value will be it&#8217;s path.</p>
<h2>Epilogue</h2>
<p>In conclusion, we feel the Redux API will assist you in authoring your options panels with additional ease and stability.  That said, we here at Redux frown upon the breaking of backward compatibility.  Should you prefer the &#8216;old way&#8217; of writing your option panels, you are free to continue to do so.  We&#8217;ve kept the legacy sample-config file, now titled <code>sample-config-legacy.php</code> as an example of how those methods work.</p>
<p>The post <a rel="nofollow" href="https://docs.reduxframework.com/core/redux-api/">The Redux API</a> appeared first on <a rel="nofollow" href="https://docs.reduxframework.com">Redux Documentation</a>.</p>
]]></content:encoded>
			<wfw:commentRss>https://docs.reduxframework.com/core/redux-api/feed/</wfw:commentRss>
		<slash:comments>6</slash:comments>
		</item>
		<item>
		<title>Using Permissions</title>
		<link>https://docs.reduxframework.com/core/fields/using-permissions/</link>
		<pubDate>Mon, 19 May 2014 13:25:44 +0000</pubDate>
		<dc:creator><![CDATA[Kevin]]></dc:creator>
				<category><![CDATA[Fields]]></category>
		<category><![CDATA[Sections]]></category>
		<category><![CDATA[fields]]></category>
		<category><![CDATA[permissions]]></category>
		<category><![CDATA[sections]]></category>

		<guid isPermaLink="false">http://docs.reduxframework.com/?p=501</guid>
		<description><![CDATA[<p>The permissions argument is useful for restricting access to certain fields or sections that require a specified user role.  For example, if the options panel is set via page_permissions to allow users with an editor role or higher to view and set options, but you&#8217;d prefer some options or sections be available only to administrators, [&#8230;]</p>
<p>The post <a rel="nofollow" href="https://docs.reduxframework.com/core/fields/using-permissions/">Using Permissions</a> appeared first on <a rel="nofollow" href="https://docs.reduxframework.com">Redux Documentation</a>.</p>
]]></description>
				<content:encoded><![CDATA[<p>The <code>permissions</code> argument is useful for restricting access to certain <a title="Getting started with Fields" href="/redux-framework/fields/getting-started-with-fields/">fields</a> or <a title="Getting Started with Sections" href="/redux-framework/sections/getting-started-with-sections/">sections</a> that require a specified user role.  For example, if the options panel is set via <code><a href="/redux-framework/arguments/page_permissions/" title="page_permissions">page_permissions</a></code> to allow users with an editor role or higher to view and set options, but you&#8217;d prefer some options or sections be available only to administrators, the permissions argument makes this possible.</p>
<p>In the above scenario, the line <code>'permissions' =&gt; 'manage_options'</code> would be added to either the <a title="Getting Started with Sections" href="/redux-framework/sections/getting-started-with-sections/">sections array</a> to control an entire section, or the <a title="Getting started with Fields" href="/redux-framework/fields/getting-started-with-fields/">field array</a> to control a specific field.  The permissions argument accepts any <a href="http://codex.wordpress.org/Roles_and_Capabilities">capability name</a>.</p>
<p><strong>NOTES</strong>:  </p>
<ul>
<li>The <a href="https://core.trac.wordpress.org/ticket/22624">WordPress documentation</a> strongly recommends NOT using role names (administrator, editor, etc.) in place of capability names as they are not guaranteed to work correctly.</li>
<li>The <code>permissions</code> argument cannot be used with the following fields, as they do not accept or save data: <code>sections</code>, <code>info</code>, <code>divide</code>, and <code>raw</code>.</li>
</ul>
<p>The post <a rel="nofollow" href="https://docs.reduxframework.com/core/fields/using-permissions/">Using Permissions</a> appeared first on <a rel="nofollow" href="https://docs.reduxframework.com">Redux Documentation</a>.</p>
]]></content:encoded>
			</item>
		<item>
		<title>Import/Export</title>
		<link>https://docs.reduxframework.com/core/fields/importexport/</link>
		<pubDate>Mon, 17 Mar 2014 23:07:52 +0000</pubDate>
		<dc:creator><![CDATA[Kevin]]></dc:creator>
				<category><![CDATA[Fields]]></category>
		<category><![CDATA[class]]></category>
		<category><![CDATA[desc]]></category>
		<category><![CDATA[export]]></category>
		<category><![CDATA[full_width]]></category>
		<category><![CDATA[id]]></category>
		<category><![CDATA[import]]></category>
		<category><![CDATA[permissions]]></category>
		<category><![CDATA[subtitle]]></category>
		<category><![CDATA[title]]></category>
		<category><![CDATA[type]]></category>

		<guid isPermaLink="false">http://docs.reduxframework.com/?p=467</guid>
		<description><![CDATA[<p>The Import/Export offers users the ability to back up and restore their Redux options data in one of three ways:  raw data, file and URL. Arguments Name Type Default Description type string &#8216;import_export&#8217; Value identifying the field type. id string Unique ID identifying the field. Must be different from all other field IDs. title string [&#8230;]</p>
<p>The post <a rel="nofollow" href="https://docs.reduxframework.com/core/fields/importexport/">Import/Export</a> appeared first on <a rel="nofollow" href="https://docs.reduxframework.com">Redux Documentation</a>.</p>
]]></description>
				<content:encoded><![CDATA[<p>The Import/Export offers users the ability to back up and restore their Redux options data in one of three ways:  raw data, file and URL.</p>
<p><img class="alignnone" src="http://docs.reduxframework.com/wp-content/uploads/sites/4/2014/03/imex.png" alt="Import Export" height="377" width="939" /></p>
<hr />
<h3 style="text-align: left">Arguments</h3>
<table border="0">
<tbody>
<tr>
<td style="text-align: center"><strong>Name</strong></td>
<td style="text-align: center"><strong>Type</strong></td>
<td style="text-align: center"><strong>Default</strong></td>
<td style="text-align: center"><strong>Description</strong></td>
</tr>
<tr>
<td>type</td>
<td>string</td>
<td>&#8216;import_export&#8217;</td>
<td>Value identifying the field type.</td>
</tr>
<tr>
<td>id</td>
<td>string</td>
<td></td>
<td>Unique ID identifying the field. Must be different from all other field IDs.</td>
</tr>
<tr>
<td>title</td>
<td>string</td>
<td></td>
<td>Displays title of the option.</td>
</tr>
<tr>
<td>subtitle</td>
<td>string</td>
<td></td>
<td>Subtitle display of the option, situated beneath the title.</td>
</tr>
<tr>
<td>desc</td>
<td>string</td>
<td></td>
<td>Description of the option, appearing beneath the field control.</td>
</tr>
<tr>
<td>class</td>
<td>string</td>
<td></td>
<td>Appends any number of classes to the field&#8217;s class attribute.</td>
</tr>
<tr>
<td>permissions</td>
<td>string</td>
<td></td>
<td>String specifying the capability required to view the section. <a class="more_info" href="/redux-framework/fields/using-permissions/"> <i class="el-icon-circle-arrow-right"></i> More info.</a></td>
</tr>
<tr>
<td>full_width</td>
<td>bool</td>
<td></td>
<td>Sets whether or not the field is set full width or as a section, similar to the other fields.</td>
</tr>
</tbody>
</table>
<hr />
<h3>Example Declaration</h3>
<pre class="brush: php; title: ; notranslate">
'fields'    =&gt; array(
    array(
        'id'            =&gt; 'opt-import-export',
        'type'          =&gt; 'import_export',
        'title'         =&gt; 'Import Export',
        'subtitle'      =&gt; 'Save and restore your Redux options',
        'full_width'    =&gt; false,
    ),
),
</pre>
<p>The post <a rel="nofollow" href="https://docs.reduxframework.com/core/fields/importexport/">Import/Export</a> appeared first on <a rel="nofollow" href="https://docs.reduxframework.com">Redux Documentation</a>.</p>
]]></content:encoded>
			</item>
		<item>
		<title>Section</title>
		<link>https://docs.reduxframework.com/core/fields/section/</link>
		<pubDate>Tue, 11 Mar 2014 04:20:33 +0000</pubDate>
		<dc:creator><![CDATA[Kevin]]></dc:creator>
				<category><![CDATA[Fields]]></category>
		<category><![CDATA[class]]></category>
		<category><![CDATA[desc]]></category>
		<category><![CDATA[hint]]></category>
		<category><![CDATA[id]]></category>
		<category><![CDATA[indent]]></category>
		<category><![CDATA[required]]></category>
		<category><![CDATA[section]]></category>
		<category><![CDATA[subtitle]]></category>
		<category><![CDATA[title]]></category>
		<category><![CDATA[type]]></category>

		<guid isPermaLink="false">http://docs.reduxframework.com/?p=139</guid>
		<description><![CDATA[<p>The Section field provides the ability to set any field below it with an indent. Arguments Name Type Default Description type string &#8216;section&#8217; Value identifying the field type. id string Unique ID identifying the field. Must be different from all other field IDs. title string Displays title of the option. subtitle string Subtitle display of [&#8230;]</p>
<p>The post <a rel="nofollow" href="https://docs.reduxframework.com/core/fields/section/">Section</a> appeared first on <a rel="nofollow" href="https://docs.reduxframework.com">Redux Documentation</a>.</p>
]]></description>
				<content:encoded><![CDATA[<p style="text-align: justify">The Section field provides the ability to set any field below it with an indent.</p>
<p style="text-align: center"><img src="https://f.cloud.github.com/assets/3412363/2154976/aeae5a96-943d-11e3-8a65-2c1ba1f04f2a.png" alt="Section Field" height="280" width="873" /></p>
<hr />
<h3 style="text-align: left">Arguments</h3>
<table border="0">
<tbody>
<tr>
<td style="text-align: center"><strong>Name</strong></td>
<td style="text-align: center"><strong>Type</strong></td>
<td style="text-align: center"><strong>Default</strong></td>
<td style="text-align: center"><strong>Description</strong></td>
</tr>
<tr>
<td>type</td>
<td>string</td>
<td>&#8216;section&#8217;</td>
<td>Value identifying the field type.</td>
</tr>
<tr>
<td>id</td>
<td>string</td>
<td></td>
<td>Unique ID identifying the field. Must be different from all other field IDs.</td>
</tr>
<tr>
<td>title</td>
<td>string</td>
<td></td>
<td>Displays title of the option.</td>
</tr>
<tr>
<td>subtitle</td>
<td>string</td>
<td></td>
<td>Subtitle display of the option, situated beneath the title.</td>
</tr>
<tr>
<td>desc</td>
<td>string</td>
<td></td>
<td>Description of the option, appearing beneath the field control.</td>
</tr>
<tr>
<td>class</td>
<td>string</td>
<td></td>
<td>Appends any number of classes to the field&#8217;s class attribute.</td>
</tr>
<tr>
<td>required</td>
<td>array</td>
<td></td>
<td>Provide the parent, comparison operator, and value which affects the field&#8217;s visibility. <a class="more_info" href="/redux-framework/the-basics/the-required-argument/"><i class="el-icon-circle-arrow-right"></i> More info</a></td>
</tr>
<tr>
<td>indent</td>
<td>bool</td>
<td>true</td>
<td>Flag to set the indentation for all fields that follow. <strong>ALWAYS use this</strong>. <code>true</code> for a starting section field, <code>false</code> for a closing section field.</td>
</tr>
<tr>
<td>hint</td>
<td>array</td>
<td></td>
<td>Array containing the <code>content</code> and optional <code>title</code> arguments for the hint tooltip. <a class="more_info" title="Using Hints in Fields" href="/redux-framework/the-basics/using-hints-in-fields/"><i class="el-icon-circle-arrow-right"></i> More info</a></td>
</tr>
</tbody>
</table>
<ul class="more_info_list">
<li><a class="more_info" title="The ‘Required’ Argument" href="/redux-framework/the-basics/the-required-argument/"><i class="el-icon-circle-arrow-right"></i> Using the Required Argument</a></li>
<li><a class="more_info" title="Using Hints in Fields" href="/redux-framework/the-basics/using-hints-in-fields/"><i class="el-icon-circle-arrow-right"></i> Using Hints</a></li>
</ul>
<p><strong>NOTES</strong>:  When using <code>required</code> with the section field, the required statement <strong>must</strong> be included in both the beginning and end section arrays.   Also, the section field cannot be hidden by default.  It’s best only to use the <code>required</code> argument with this field when the fold is shown by default.</p>
<hr />
<h3>Example Declaration</h3>
<pre class="brush: php; title: ; notranslate">
&lt;?php
    $fields = array(
       'id' =&gt; 'section-start',
       'type' =&gt; 'section',
       'title' =&gt; __('Indented Options', 'redux-framework-demo'),
       'subtitle' =&gt; __('With the &quot;section&quot; field you can create indent option sections.', 'redux-framework-demo'),
       'indent' =&gt; true 
   );
?&gt;

// Other field arrays go here.

array(
    'id'     =&gt; 'section-end',
    'type'   =&gt; 'section',
    'indent' =&gt; false,
),
</pre>
<p>The post <a rel="nofollow" href="https://docs.reduxframework.com/core/fields/section/">Section</a> appeared first on <a rel="nofollow" href="https://docs.reduxframework.com">Redux Documentation</a>.</p>
]]></content:encoded>
			</item>
		<item>
		<title>Typography</title>
		<link>https://docs.reduxframework.com/core/fields/typography/</link>
		<comments>https://docs.reduxframework.com/core/fields/typography/#comments</comments>
		<pubDate>Mon, 10 Mar 2014 22:41:51 +0000</pubDate>
		<dc:creator><![CDATA[Kevin]]></dc:creator>
				<category><![CDATA[Fields]]></category>
		<category><![CDATA[all_styles]]></category>
		<category><![CDATA[always_display]]></category>
		<category><![CDATA[class]]></category>
		<category><![CDATA[color]]></category>
		<category><![CDATA[compiler]]></category>
		<category><![CDATA[default]]></category>
		<category><![CDATA[desc]]></category>
		<category><![CDATA[font-backup]]></category>
		<category><![CDATA[font-family]]></category>
		<category><![CDATA[font-size]]></category>
		<category><![CDATA[font-style]]></category>
		<category><![CDATA[font-weight]]></category>
		<category><![CDATA[fonts]]></category>
		<category><![CDATA[google]]></category>
		<category><![CDATA[hint]]></category>
		<category><![CDATA[id]]></category>
		<category><![CDATA[letter-spacing]]></category>
		<category><![CDATA[line-height]]></category>
		<category><![CDATA[output]]></category>
		<category><![CDATA[permissions]]></category>
		<category><![CDATA[preview]]></category>
		<category><![CDATA[required]]></category>
		<category><![CDATA[select2]]></category>
		<category><![CDATA[subsets]]></category>
		<category><![CDATA[subtitle]]></category>
		<category><![CDATA[text-align]]></category>
		<category><![CDATA[text-transform]]></category>
		<category><![CDATA[title]]></category>
		<category><![CDATA[type]]></category>
		<category><![CDATA[units]]></category>
		<category><![CDATA[update-weekly]]></category>
		<category><![CDATA[validate]]></category>
		<category><![CDATA[word-spacing]]></category>

		<guid isPermaLink="false">http://docs.reduxframework.com/?p=126</guid>
		<description><![CDATA[<p>The Redux Typography field in second-to-none when it comes to framework typography options.  It&#8217;s often copied but never duplicated!  Google fonts, font preview, color-picket, letter &#38; word spacing, styles &#38; weight selection, and much, much more! Arguments Name Type Default Description type string &#8216;typography&#8217; Value identifying the field type. id string Unique ID identifying the [&#8230;]</p>
<p>The post <a rel="nofollow" href="https://docs.reduxframework.com/core/fields/typography/">Typography</a> appeared first on <a rel="nofollow" href="https://docs.reduxframework.com">Redux Documentation</a>.</p>
]]></description>
				<content:encoded><![CDATA[<p style="text-align: justify;">The Redux Typography field in second-to-none when it comes to framework typography options.  It&#8217;s often copied but never duplicated!  Google fonts, font preview, color-picket, letter &amp; word spacing, styles &amp; weight selection, and much, much more!</p>
<p style="text-align: center;"><a href="http://docs.reduxframework.com/wp-content/uploads/sites/4/2014/03/new_typo.png"><img src="http://docs.reduxframework.com/wp-content/uploads/sites/4/2014/03/new_typo.png" alt="new_typo" class="aligncenter wp-image-537 size-full" height="453" width="926" srcset="https://docs.reduxframework.com/wp-content/uploads/sites/4/2014/03/new_typo.png 926w, https://docs.reduxframework.com/wp-content/uploads/sites/4/2014/03/new_typo-300x146.png 300w, https://docs.reduxframework.com/wp-content/uploads/sites/4/2014/03/new_typo-60x29.png 60w, https://docs.reduxframework.com/wp-content/uploads/sites/4/2014/03/new_typo-150x73.png 150w" sizes="(max-width: 926px) 100vw, 926px" /></a></p>
<hr />
<h3 style="text-align: left;">Arguments</h3>
<table border="0">
<tbody>
<tr>
<td style="text-align: center;"><strong>Name</strong></td>
<td style="text-align: center;"><strong>Type</strong></td>
<td style="text-align: center;"><strong>Default</strong></td>
<td style="text-align: center;"><strong>Description</strong></td>
</tr>
<tr>
<td>type</td>
<td>string</td>
<td>&#8216;typography&#8217;</td>
<td>Value identifying the field type.</td>
</tr>
<tr>
<td>id</td>
<td>string</td>
<td></td>
<td>Unique ID identifying the field. Must be different from all other field IDs.</td>
</tr>
<tr>
<td>title</td>
<td>string</td>
<td></td>
<td>Displays title of the option.</td>
</tr>
<tr>
<td>subtitle</td>
<td>string</td>
<td></td>
<td>Subtitle display of the option, situated beneath the title.</td>
</tr>
<tr>
<td>desc</td>
<td>string</td>
<td></td>
<td>Description of the option, appearing beneath the field control.</td>
</tr>
<tr>
<td>class</td>
<td>string</td>
<td></td>
<td>Appends any number of classes to the field&#8217;s class attribute.</td>
</tr>
<tr>
<td>compiler</td>
<td>bool/array</td>
<td></td>
<td>Flag to run the compiler hook or array of CSS selectors to pass dynamic CSS to the compiler hook. <a class="more_info" href="/redux-framework/integrating-a-compiler/"><i class="el-icon-circle-arrow-right"></i> More info</a></td>
</tr>
<tr>
<td>output</td>
<td>array</td>
<td></td>
<td>Array of CSS selectors to dynamically generate CSS. <a class="more_info" href="/redux-framework/the-basics/output-2/"><i class="el-icon-circle-arrow-right"></i> More info</a></td>
</tr>
<tr>
<td>required</td>
<td>array</td>
<td></td>
<td>Provide the parent, comparison operator, and value which affects the field&#8217;s visibility. <a class="more_info" href="/redux-framework/the-basics/the-required-argument/"><i class="el-icon-circle-arrow-right"></i> More info</a></td>
</tr>
<tr>
<td>validate</td>
<td>string</td>
<td></td>
<td>String value of <code>color</code> to validate the chosen color. <a title="Validation" href="/redux-framework/validation/"><i class="el-icon-circle-arrow-right"></i> More info</a>.</td>
</tr>
<tr>
<td>default</td>
<td>array</td>
<td></td>
<td>Array of default values.  See &#8216;Default Options&#8217; below.</td>
</tr>
<tr>
<td>units</td>
<td>string</td>
<td>px</td>
<td>Sets the default unit value.  Accepts: px em rem %</td>
</tr>
<tr>
<td>google</td>
<td>bool</td>
<td>true</td>
<td>Flag to set Google fonts. Please make sure the Google API key is defined, or this feature will not work. For information on acquiring an API key, see <a href="https://developers.google.com/fonts/docs/developer_api#Auth">https://developers.google.com/fonts/docs/developer_api#Auth</a></td>
</tr>
<tr>
<td>fonts</td>
<td>array</td>
<td></td>
<td>An array of fonts in key pair format, (i.e. <code>'verdana,san-serif,helvatica' =&gt; 'Verdana'</code>).  Specifying a font array will override the default Standard fonts.</td>
</tr>
<tr>
<td>font-backup</td>
<td>bool</td>
<td>false</td>
<td>Flag to display a selector specifying backup non-Google fonts when Google fonts are used.</td>
</tr>
<tr>
<td>font-style</td>
<td>bool</td>
<td>true</td>
<td>Flag to display the font style selector.</td>
</tr>
<tr>
<td>font-weight</td>
<td>bool</td>
<td>true</td>
<td>Flag to display the font weight selector.</td>
</tr>
<tr>
<td>font-size</td>
<td>bool</td>
<td>true</td>
<td>Flag to display the font size input.</td>
</tr>
<tr>
<td>font-family</td>
<td>bool</td>
<td>true</td>
<td>Flag to display the font family selector.</td>
</tr>
<tr>
<td>subsets</td>
<td>bool</td>
<td>true</td>
<td>Subsets only appear if <code>google</code> is set to true and <code>subsets</code> is set to true.</td>
</tr>
<tr>
<td>line-height</td>
<td>bool</td>
<td>true</td>
<td>Flag to display the font line height input.</td>
</tr>
<tr>
<td>word-spacing</td>
<td>bool</td>
<td>false</td>
<td>Flag to display the word spacing input.</td>
</tr>
<tr>
<td>letter-spacing</td>
<td>bool</td>
<td>false</td>
<td>Flag to display the letter spacing input.</td>
</tr>
<tr>
<td>text-align</td>
<td>bool</td>
<td>true</td>
<td>Flag to display the text alignment selector.</td>
</tr>
<tr>
<td>text-transform</td>
<td>bool</td>
<td>false</td>
<td>Flag to display the text transform selector.</td>
</tr>
<tr>
<td>color</td>
<td>bool</td>
<td>true</td>
<td>Flag to display the font color input.</td>
</tr>
<tr>
<td>preview</td>
<td>array</td>
<td></td>
<td>Array value for preview settings.  See &#8216;Preview Options&#8217; below.</td>
</tr>
<tr>
<td>all_styles</td>
<td>bool</td>
<td>false</td>
<td>Flag to set all available styles for selected Google font in the CSS.</td>
</tr>
<tr>
<td><del>update-weekly</del></td>
<td><del>bool</del></td>
<td><del>false</del></td>
<td><del>Flag to update the Google fonts on a weekly basis.</del> Deprecated. Use the global argument. <a class="more_info" href="/core/arguments/#google_update_weekly"><i class="el-icon-circle-arrow-right"></i> More info.</a></td>
</tr>
<tr>
<td>permissions</td>
<td>string</td>
<td></td>
<td>String specifying the capability required to view the section. <a class="more_info" href="/redux-framework/fields/using-permissions/"> <i class="el-icon-circle-arrow-right"></i> More info.</a></td>
</tr>
<tr>
<td>select2</td>
<td>array</td>
<td></td>
<td>Array of select2 arguments. For more information see the &#8216;Constructor&#8217; section of the <a target="_blank" href="http://ivaynberg.github.io/select2/index.html"><i class="el-icon-circle-arrow-right"></i> Select2 docs</a>.</td>
</tr>
<tr>
<td>font_family_clear</td>
<td>bool</td>
<td>true</td>
<td>Flag to set the clear field button on the font-family selector.</td>
</tr>
<tr>
<td>hint</td>
<td>array</td>
<td></td>
<td>Array containing the <code>content</code> and optional <code>title</code> arguments for the hint tooltip. <a class="more_info" title="Using Hints in Fields" href="/redux-framework/the-basics/using-hints-in-fields/"><i class="el-icon-circle-arrow-right"></i> More info</a></td>
</tr>
</tbody>
</table>
<ul class="more_info_list">
<li><a class="more_info" title="The ‘Required’ Argument" href="/redux-framework/the-basics/the-required-argument/"><i class="el-icon-circle-arrow-right"></i> Using the Required Argument</a></li>
<li><a class="more_info" title="Output" href="/redux-framework/the-basics/output-2/"><i class="el-icon-circle-arrow-right"></i> Using the Output Argument</a></li>
<li><a class="more_info" title="Integrating a Compiler" href="/redux-framework/integrating-a-compiler/"><i class="el-icon-circle-arrow-right"></i> Using the Compiler Argument</a></li>
<li><a title="Using the Validate Argument" href="/redux-framework/validation/"><i class="el-icon-circle-arrow-right"></i> Using the Validate Argument</a></li>
<li><a class="more_info" title="The ‘Permissions’ Argument" href="/redux-framework/fields/using-permissions/"><i class="el-icon-circle-arrow-right"></i> Using the Permissions Argument</a></li>
<li><a class="more_info" title="Using Hints in Fields" href="/redux-framework/the-basics/using-hints-in-fields/"><i class="el-icon-circle-arrow-right"></i> Using Hints</a></li>
</ul>
<h3>Default Options</h3>
<table border="0">
<tbody>
<tr>
<td style="text-align: center;"><strong>Name</strong></td>
<td style="text-align: center;"><strong>Type</strong></td>
<td style="text-align: center;"><strong>Description</strong></td>
</tr>
<tr>
<td>font-backup</td>
<td>bool</td>
<td>Flag to select a backup non-Google font in addition to a Google font.</td>
</tr>
<tr>
<td>font-style</td>
<td>string</td>
<td>Sets the default font style.</td>
</tr>
<tr>
<td>font-weight</td>
<td>string</td>
<td>Sets the default font weight.</td>
</tr>
<tr>
<td>font-size</td>
<td>string</td>
<td>Sets the default font size.</td>
</tr>
<tr>
<td>font-family</td>
<td>string</td>
<td>Sets the default font family.</td>
</tr>
<tr>
<td>line-height</td>
<td>string</td>
<td>Sets the default line height.</td>
</tr>
<tr>
<td>word-spacing</td>
<td>string</td>
<td>Sets the default word spacing.</td>
</tr>
<tr>
<td>letter-spacing</td>
<td>string</td>
<td>Sets the default letter spacing.</td>
</tr>
<tr>
<td>google</td>
<td>bool</td>
<td>Flag to set Google fonts.</td>
</tr>
<tr>
<td>color</td>
<td>string</td>
<td>Hex string to set the color picker default.</td>
</tr>
<tr>
<td>text-align</td>
<td>string</td>
<td>Sets the default text align value.  Accepts:  <code>inherit</code>, <code>left</code>, <code>right</code>, <code>center</code>, <code>justify</code>, or <code>initial</code>.</td>
</tr>
<tr>
<td>text-transform</td>
<td>string</td>
<td>Sets the default text transform value.  Accepts:  <code>none</code>, <code>capitalize</code>, <code>uppercase</code>, <code>lowercase</code>, <code>initial</code>, or <code>inherit</code>.</td>
</tr>
</tbody>
</table>
<h3>Preview Options</h3>
<table border="0">
<tbody>
<tr>
<td style="text-align: center;"><strong>Name</strong></td>
<td style="text-align: center;"><strong>Type</strong></td>
<td style="text-align: center;"><strong>Description</strong></td>
</tr>
<tr>
<td>text</td>
<td>alphanumeric string</td>
<td>Text to display in the font preview area.</td>
</tr>
<tr>
<td>font-size</td>
<td>33px</td>
<td>Value to set the font size in the preview area.</td>
</tr>
<tr>
<td>always_display</td>
<td>false</td>
<td>Flag that sets whether or not the font preview will display, even when no changes are made.</td>
</tr>
</tbody>
</table>
<hr />
<h3>Example Declaration</h3>
<pre class="brush: php; title: ; notranslate">
    $fields = array(
        'id'          =&gt; 'opt-typography',
        'type'        =&gt; 'typography', 
        'title'       =&gt; __('Typography', 'redux-framework-demo'),
        'google'      =&gt; true, 
        'font-backup' =&gt; true,
        'output'      =&gt; array('h2.site-description'),
        'units'       =&gt;'px',
        'subtitle'    =&gt; __('Typography option with each property can be called individually.', 'redux-framework-demo'),
        'default'     =&gt; array(
            'color'       =&gt; '#333', 
            'font-style'  =&gt; '700', 
            'font-family' =&gt; 'Abel', 
            'google'      =&gt; true,
            'font-size'   =&gt; '33px', 
            'line-height' =&gt; '40'
        ),
    );
</pre>
<h3>Example Usage</h3>
<p>This example in based on the example usage provided above. Be sure to change <code>$redux_demo</code> to the value you specified in your <a title="opt_name" href="/redux-framework/arguments/opt_name/"><code>opt_name</code> argument.</a></p>
<pre class="brush: php; title: ; notranslate">
global $redux_demo;

echo 'Color: '       . $redux_demo['opt-typography']['color'];
echo 'Font style: '  . $redux_demo['opt-typography']['font-style'];
echo 'Font family: ' . $redux_demo['opt-typography']['font-family'];
echo 'Google: '      . $redux_demo['opt-typography']['google'];
echo 'Font size: '   . $redux_demo['opt-typography']['font-size'];
echo 'Line height: ' . $redux_demo['opt-typography']['line-height'];
</pre>
<p>The post <a rel="nofollow" href="https://docs.reduxframework.com/core/fields/typography/">Typography</a> appeared first on <a rel="nofollow" href="https://docs.reduxframework.com">Redux Documentation</a>.</p>
]]></content:encoded>
			<wfw:commentRss>https://docs.reduxframework.com/core/fields/typography/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
		<item>
		<title>Textarea</title>
		<link>https://docs.reduxframework.com/core/fields/textarea/</link>
		<pubDate>Mon, 10 Mar 2014 22:41:26 +0000</pubDate>
		<dc:creator><![CDATA[Kevin]]></dc:creator>
				<category><![CDATA[Fields]]></category>
		<category><![CDATA[allowed_html]]></category>
		<category><![CDATA[class]]></category>
		<category><![CDATA[compiler]]></category>
		<category><![CDATA[default]]></category>
		<category><![CDATA[desc]]></category>
		<category><![CDATA[hint]]></category>
		<category><![CDATA[id]]></category>
		<category><![CDATA[permissions]]></category>
		<category><![CDATA[placeholder]]></category>
		<category><![CDATA[required]]></category>
		<category><![CDATA[rows]]></category>
		<category><![CDATA[subtitle]]></category>
		<category><![CDATA[title]]></category>
		<category><![CDATA[type]]></category>
		<category><![CDATA[validate]]></category>

		<guid isPermaLink="false">http://docs.reduxframework.com/?p=125</guid>
		<description><![CDATA[<p>The Textarea field accepts any form of multi-line string input, including custom HTML. Arguments Name Type Default Description type string &#8216;textarea&#8217; Value identifying the field type. id string Unique ID identifying the field. Must be different from all other field IDs. title string Displays title of the option. subtitle string Subtitle display of the option, [&#8230;]</p>
<p>The post <a rel="nofollow" href="https://docs.reduxframework.com/core/fields/textarea/">Textarea</a> appeared first on <a rel="nofollow" href="https://docs.reduxframework.com">Redux Documentation</a>.</p>
]]></description>
				<content:encoded><![CDATA[<p style="text-align: justify">The Textarea field accepts any form of multi-line string input, including custom HTML.</p>
<p style="text-align: center"><img src="https://f.cloud.github.com/assets/3412363/1588098/1f194854-5249-11e3-95be-f100bf779ce3.png" alt="Textarea Field" height="177" width="802" /></p>
<hr />
<h3 style="text-align: left">Arguments</h3>
<table border="0">
<tbody>
<tr>
<td style="text-align: center"><strong>Name</strong></td>
<td style="text-align: center"><strong>Type</strong></td>
<td style="text-align: center"><strong>Default</strong></td>
<td style="text-align: center"><strong>Description</strong></td>
</tr>
<tr>
<td>type</td>
<td>string</td>
<td>&#8216;textarea&#8217;</td>
<td>Value identifying the field type.</td>
</tr>
<tr>
<td>id</td>
<td>string</td>
<td></td>
<td>Unique ID identifying the field. Must be different from all other field IDs.</td>
</tr>
<tr>
<td>title</td>
<td>string</td>
<td></td>
<td>Displays title of the option.</td>
</tr>
<tr>
<td>subtitle</td>
<td>string</td>
<td></td>
<td>Subtitle display of the option, situated beneath the title.</td>
</tr>
<tr>
<td>desc</td>
<td>string</td>
<td></td>
<td>Description of the option, appearing beneath the field control.</td>
</tr>
<tr>
<td>class</td>
<td>string</td>
<td></td>
<td>Appends any number of classes to the field&#8217;s class attribute.</td>
</tr>
<tr>
<td>compiler</td>
<td>bool</td>
<td></td>
<td>Flag to run the compiler hook. <a class="more_info" href="/redux-framework/integrating-a-compiler/"><i class="el-icon-circle-arrow-right"></i> More info</a></td>
</tr>
<tr>
<td>required</td>
<td>array</td>
<td></td>
<td>Provide the parent, comparison operator, and value which affects the field&#8217;s visibility. <a class="more_info" href="/redux-framework/the-basics/the-required-argument/"><i class="el-icon-circle-arrow-right"></i> More info</a></td>
</tr>
<tr>
<td>validate</td>
<td>string</td>
<td></td>
<td>String value of <code>color</code> to validate the chosen color. <a title="Validation" href="/redux-framework/validation/"><i class="el-icon-circle-arrow-right"></i> More info</a>.</td>
</tr>
<tr>
<td>default</td>
<td>string</td>
<td></td>
<td>Default text to display inside the textarea field.</td>
</tr>
<tr>
<td>placeholder</td>
<td>string</td>
<td></td>
<td>Message to display when no text is present.</td>
</tr>
<tr>
<td>rows</td>
<td>int</td>
<td>6</td>
<td>Numbers of text rows to display.</td>
</tr>
<tr>
<td>allowed_html</td>
<td>array</td>
<td></td>
<td>Array of allowed HTML tags. See <a href="http://codex.wordpress.org/Function_Reference/wp_kses">http://codex.wordpress.org/Function_Reference/wp_kses</a> for more information.</td>
</tr>
<tr>
<td>permissions</td>
<td>string</td>
<td></td>
<td>String specifying the capability required to view the section. <a class="more_info" href="/redux-framework/fields/using-permissions/"> <i class="el-icon-circle-arrow-right"></i> More info.</a></td>
</tr>
<tr>
<td>hint</td>
<td>array</td>
<td></td>
<td>Array containing the <code>content</code> and optional <code>title</code> arguments for the hint tooltip. <a class="more_info" title="Using Hints in Fields" href="/redux-framework/the-basics/using-hints-in-fields/"><i class="el-icon-circle-arrow-right"></i> More info</a></td>
</tr>
</tbody>
</table>
<ul class="more_info_list">
<li><a class="more_info" title="The ‘Required’ Argument" href="/redux-framework/the-basics/the-required-argument/"><i class="el-icon-circle-arrow-right"></i> Using the Required Argument</a></li>
<li><a class="more_info" title="Integrating a Compiler" href="/redux-framework/integrating-a-compiler/"><i class="el-icon-circle-arrow-right"></i> Using the Compiler Argument</a></li>
<li><a title="Using the Validate Argument" href="/redux-framework/validation/"><i class="el-icon-circle-arrow-right"></i> Using the Validate Argument</a></li>
<li><a class="more_info" title="The ‘Permissions’ Argument" href="/redux-framework/fields/using-permissions/"><i class="el-icon-circle-arrow-right"></i> Using the Permissions Argument</a></li>
<li><a class="more_info" title="Using Hints in Fields" href="/redux-framework/the-basics/using-hints-in-fields/"><i class="el-icon-circle-arrow-right"></i> Using Hints</a></li>
</ul>
<p><strong>Note</strong>: For the <code>allowed_html</code> array to apply, the <code>validate</code> argument must be set to <code>html_custom</code>.</p>
<hr />
<h3>Example Declaration</h3>
<pre class="brush: php; title: ; notranslate">
    $fields = array(
        'id'=&gt;'opt-textarea',
        'type' =&gt; 'textarea',
        'title' =&gt; __('Textarea Option - HTML Validated Custom', 'redux-framework-demo'), 
        'subtitle' =&gt; __('Custom HTML Allowed (wp_kses)', 'redux-framework-demo'),
        'desc' =&gt; __('This is the description field, again good for additional info.', 'redux-framework-demo'),
        'validate' =&gt; 'html_custom',
        'default' =&gt; '&lt;br /&gt;Some HTML is allowed in here.&lt;br /&gt;',
        'allowed_html' =&gt; array(
            'a' =&gt; array(
                'href' =&gt; array(),
                'title' =&gt; array()
            ),
            'br' =&gt; array(),
            'em' =&gt; array(),
            'strong' =&gt; array()
        )
    );
</pre>
<h3>Example Usage</h3>
<p>This example in based on the example usage provided above. Be sure to change <code>$redux_demo</code> to the value you specified in your <a title="opt_name" href="/redux-framework/arguments/opt_name/"><code>opt_name</code> argument.</a></p>
<pre class="brush: php; title: ; notranslate">
global $redux_demo;

echo '' . $redux_demo['opt-textarea'];
</pre>
<p>The post <a rel="nofollow" href="https://docs.reduxframework.com/core/fields/textarea/">Textarea</a> appeared first on <a rel="nofollow" href="https://docs.reduxframework.com">Redux Documentation</a>.</p>
]]></content:encoded>
			</item>
		<item>
		<title>Text</title>
		<link>https://docs.reduxframework.com/core/fields/text/</link>
		<pubDate>Mon, 10 Mar 2014 22:41:10 +0000</pubDate>
		<dc:creator><![CDATA[Kevin]]></dc:creator>
				<category><![CDATA[Fields]]></category>
		<category><![CDATA[class]]></category>
		<category><![CDATA[compiler]]></category>
		<category><![CDATA[default]]></category>
		<category><![CDATA[desc]]></category>
		<category><![CDATA[hint]]></category>
		<category><![CDATA[id]]></category>
		<category><![CDATA[msg]]></category>
		<category><![CDATA[permissions]]></category>
		<category><![CDATA[placeholder]]></category>
		<category><![CDATA[required]]></category>
		<category><![CDATA[subtitle]]></category>
		<category><![CDATA[title]]></category>
		<category><![CDATA[type]]></category>
		<category><![CDATA[validate]]></category>

		<guid isPermaLink="false">http://docs.reduxframework.com/?p=124</guid>
		<description><![CDATA[<p>The Text field accepts any form of text and optionally validates the text before saving the value. Arguments Name Type Default Description type string &#8216;text&#8217; Value identifying the field type. id string Unique ID identifying the field. Must be different from all other field IDs. title string Displays title of the option. subtitle string Subtitle [&#8230;]</p>
<p>The post <a rel="nofollow" href="https://docs.reduxframework.com/core/fields/text/">Text</a> appeared first on <a rel="nofollow" href="https://docs.reduxframework.com">Redux Documentation</a>.</p>
]]></description>
				<content:encoded><![CDATA[<p style="text-align: justify">The Text field accepts any form of text and optionally validates the text before saving the value.</p>
<p style="text-align: center"><img src="https://f.cloud.github.com/assets/3412363/1587883/b6bba20c-5243-11e3-8b0e-1df456347427.png" alt="Text Field" height="87" width="585" /></p>
<hr />
<h3 style="text-align: left">Arguments</h3>
<table border="0">
<tbody>
<tr>
<td style="text-align: center"><strong>Name</strong></td>
<td style="text-align: center"><strong>Type</strong></td>
<td style="text-align: center"><strong>Default</strong></td>
<td style="text-align: center"><strong>Description</strong></td>
</tr>
<tr>
<td>type</td>
<td>string</td>
<td>&#8216;text&#8217;</td>
<td>Value identifying the field type.</td>
</tr>
<tr>
<td>id</td>
<td>string</td>
<td></td>
<td>Unique ID identifying the field. Must be different from all other field IDs.</td>
</tr>
<tr>
<td>title</td>
<td>string</td>
<td></td>
<td>Displays title of the option.</td>
</tr>
<tr>
<td>subtitle</td>
<td>string</td>
<td></td>
<td>Subtitle display of the option, situated beneath the title.</td>
</tr>
<tr>
<td>desc</td>
<td>string</td>
<td></td>
<td>Description of the option, appearing beneath the field control.</td>
</tr>
<tr>
<td>class</td>
<td>string</td>
<td></td>
<td>Appends any number of classes to the field&#8217;s class attribute.</td>
</tr>
<tr>
<td>compiler</td>
<td>bool</td>
<td></td>
<td>Flag to run the compiler hook. <a class="more_info" href="/redux-framework/integrating-a-compiler/"> More info</a></td>
</tr>
<tr>
<td>required</td>
<td>array</td>
<td></td>
<td>Provide the parent, comparison operator, and value which affects the field&#8217;s visibility. <a class="more_info" href="/redux-framework/the-basics/the-required-argument/"><i class="el-icon-circle-arrow-right"></i> More info</a></td>
</tr>
<tr>
<td>validate</td>
<td>string</td>
<td></td>
<td>String value of accepted validation flags. <a title="Validation" href="/redux-framework/validation/"><i class="el-icon-circle-arrow-right"></i> More info</a>.</td>
</tr>
<tr>
<td>default</td>
<td>string</td>
<td></td>
<td>String that appears in the text input.</td>
</tr>
<tr>
<td>readonly</td>
<td>boolean</td>
<td>false</td>
<td>Sets the input field to be readonly or not.</td>
</tr>
<tr>
<td>placeholder</td>
<td>string</td>
<td></td>
<td>Text to display in the input when n value is present.</td>
</tr>
<tr>
<td>msg</td>
<td>string</td>
<td></td>
<td>Custom message to display upon failure of validation.</td>
</tr>
<tr>
<td>permissions</td>
<td>string</td>
<td></td>
<td>String specifying the capability required to view the section. <a class="more_info" href="/redux-framework/fields/using-permissions/"> <i class="el-icon-circle-arrow-right"></i> More info.</a></td>
</tr>
<tr>
<td>hint</td>
<td>array</td>
<td></td>
<td>Array containing the <code>content</code> and optional <code>title</code> arguments for the hint tooltip. <a class="more_info" title="Using Hints in Fields" href="/redux-framework/the-basics/using-hints-in-fields/"><i class="el-icon-circle-arrow-right"></i>More info</a></td>
</tr>
</tbody>
</table>
<ul class="more_info_list">
<li><a class="more_info" title="The ‘Required’ Argument" href="/redux-framework/the-basics/the-required-argument/"><i class="el-icon-circle-arrow-right"></i> Using the Required Argument</a></li>
<li><a class="more_info" title="Integrating a Compiler" href="/redux-framework/integrating-a-compiler/"><i class="el-icon-circle-arrow-right"></i> Using the Compiler Argument</a></li>
<li><a title="Using the Validate Argument" href="/redux-framework/validation/"><i class="el-icon-circle-arrow-right"></i> Using the Validate Argument</a></li>
<li><a class="more_info" title="The ‘Permissions’ Argument" href="/redux-framework/fields/using-permissions/"><i class="el-icon-circle-arrow-right"></i> Using the Permissions Argument</a></li>
<li><a class="more_info" title="Using Hints in Fields" href="/redux-framework/the-basics/using-hints-in-fields/"><i class="el-icon-circle-arrow-right"></i> Using Hints</a></li>
</ul>
<hr />
<h3>Example Declaration</h3>
<pre class="brush: php; title: ; notranslate">
    $fields = array(
        'id'       =&gt; 'opt-text',
        'type'     =&gt; 'text',
        'title'    =&gt; __('Text Option - Email Validated', 'redux-framework-demo'),
        'subtitle' =&gt; __('This is a little space under the Field Title in the Options table, additional info is good in here.', 'redux-framework-demo'),
        'desc'     =&gt; __('This is the description field, again good for additional info.', 'redux-framework-demo'),
        'validate' =&gt; 'email',
        'msg'      =&gt; 'custom error message',
        'default'  =&gt; 'test@test.com'
    );
</pre>
<h3>Example Usage</h3>
<p>This example in based on the example usage provided above. Be sure to change <code>$redux_demo</code> to the value you specified in your <a title="opt_name" href="/redux-framework/arguments/opt_name/"><code>opt_name</code> argument.</a></p>
<pre class="brush: php; title: ; notranslate">
global $redux_demo;

echo 'Text value: ' . $redux_demo['opt-text'];

</pre>
<p>The post <a rel="nofollow" href="https://docs.reduxframework.com/core/fields/text/">Text</a> appeared first on <a rel="nofollow" href="https://docs.reduxframework.com">Redux Documentation</a>.</p>
]]></content:encoded>
			</item>
		<item>
		<title>Switch</title>
		<link>https://docs.reduxframework.com/core/fields/switch/</link>
		<pubDate>Mon, 10 Mar 2014 22:40:54 +0000</pubDate>
		<dc:creator><![CDATA[Kevin]]></dc:creator>
				<category><![CDATA[Fields]]></category>
		<category><![CDATA[class]]></category>
		<category><![CDATA[compiler]]></category>
		<category><![CDATA[default]]></category>
		<category><![CDATA[desc]]></category>
		<category><![CDATA[hint]]></category>
		<category><![CDATA[id]]></category>
		<category><![CDATA[off]]></category>
		<category><![CDATA[on]]></category>
		<category><![CDATA[permissions]]></category>
		<category><![CDATA[required]]></category>
		<category><![CDATA[subtitle]]></category>
		<category><![CDATA[title]]></category>
		<category><![CDATA[type]]></category>

		<guid isPermaLink="false">http://docs.reduxframework.com/?p=123</guid>
		<description><![CDATA[<p>The Switch field sets a true or false value based on the selection.  Users may also change the labels of the switch. Arguments Name Type Default Description type string &#8216;switch&#8217; Value identifying the field type. id string Unique ID identifying the field. Must be different from all other field IDs. title string Displays title of [&#8230;]</p>
<p>The post <a rel="nofollow" href="https://docs.reduxframework.com/core/fields/switch/">Switch</a> appeared first on <a rel="nofollow" href="https://docs.reduxframework.com">Redux Documentation</a>.</p>
]]></description>
				<content:encoded><![CDATA[<p style="text-align: justify">The Switch field sets a true or false value based on the selection.  Users may also change the labels of the switch.</p>
<p style="text-align: center"><img src="https://f.cloud.github.com/assets/3412363/1587830/61c6e046-5242-11e3-88d3-8ad0d43c9404.png" alt="Switch Field" height="65" width="338" /></p>
<hr />
<h3 style="text-align: left">Arguments</h3>
<table border="0">
<tbody>
<tr>
<td style="text-align: center"><strong>Name</strong></td>
<td style="text-align: center"><strong>Type</strong></td>
<td style="text-align: center"><strong>Default</strong></td>
<td style="text-align: center"><strong>Description</strong></td>
</tr>
<tr>
<td>type</td>
<td>string</td>
<td>&#8216;switch&#8217;</td>
<td>Value identifying the field type.</td>
</tr>
<tr>
<td>id</td>
<td>string</td>
<td></td>
<td>Unique ID identifying the field. Must be different from all other field IDs.</td>
</tr>
<tr>
<td>title</td>
<td>string</td>
<td></td>
<td>Displays title of the option.</td>
</tr>
<tr>
<td>subtitle</td>
<td>string</td>
<td></td>
<td>Subtitle display of the option, situated beneath the title.</td>
</tr>
<tr>
<td>desc</td>
<td>string</td>
<td></td>
<td>Description of the option, appearing beneath the field control.</td>
</tr>
<tr>
<td>class</td>
<td>string</td>
<td></td>
<td>Appends any number of classes to the field&#8217;s class attribute.</td>
</tr>
<tr>
<td>compiler</td>
<td>bool/array</td>
<td></td>
<td>Flag to run the compiler hook or array of CSS selectors to pass dynamic CSS to the compiler hook. <a class="more_info" href="/redux-framework/integrating-a-compiler/"><i class="el-icon-circle-arrow-right"></i> More info</a></td>
</tr>
<tr>
<td>required</td>
<td>array</td>
<td></td>
<td>Provide the parent, comparison operator, and value which affects the field&#8217;s visibility. <a class="more_info" href="/redux-framework/the-basics/the-required-argument/"><i class="el-icon-circle-arrow-right"></i> More info</a></td>
</tr>
<tr>
<td>default</td>
<td>bool</td>
<td></td>
<td>Default value of the switch.</td>
</tr>
<tr>
<td>on</td>
<td>string</td>
<td>&#8216;On&#8217;</td>
<td>Text display for the true value.</td>
</tr>
<tr>
<td>off</td>
<td>string</td>
<td>&#8216;Off&#8217;</td>
<td>Text display for the false value.</td>
</tr>
<tr>
<td>permissions</td>
<td>string</td>
<td></td>
<td>String specifying the capability required to view the section. <a class="more_info" href="/redux-framework/fields/using-permissions/"> <i class="el-icon-circle-arrow-right"></i> More info.</a></td>
</tr>
<tr>
<td>hint</td>
<td>array</td>
<td></td>
<td>Array containing the <code>content</code> and optional <code>title</code> arguments for the hint tooltip. <a class="more_info" title="Using Hints in Fields" href="/redux-framework/the-basics/using-hints-in-fields/"><i class="el-icon-circle-arrow-right"></i> More info</a></td>
</tr>
</tbody>
</table>
<ul class="more_info_list">
<li><a class="more_info" title="The ‘Required’ Argument" href="/redux-framework/the-basics/the-required-argument/"><i class="el-icon-circle-arrow-right"></i> Using the Required Argument</a></li>
<li><a class="more_info" title="Integrating a Compiler" href="/redux-framework/integrating-a-compiler/"><i class="el-icon-circle-arrow-right"></i> Using the Compiler Argument</a></li>
<li><a class="more_info" title="The ‘Permissions’ Argument" href="/redux-framework/fields/using-permissions/"><i class="el-icon-circle-arrow-right"></i> Using the Permissions Argument</a></li>
<li><a class="more_info" title="Using Hints in Fields" href="/redux-framework/the-basics/using-hints-in-fields/"><i class="el-icon-circle-arrow-right"></i> Using Hints</a></li>
</ul>
<hr />
<h3>Example Declaration</h3>
<pre class="brush: php; title: ; notranslate">
    $fields = array(
        'id'       =&gt; 'opt-switch',
        'type'     =&gt; 'switch', 
        'title'    =&gt; __('Switch On', 'redux-framework-demo'),
        'subtitle' =&gt; __('Look, it\'s on!', 'redux-framework-demo'),
        'default'  =&gt; true,
    );
</pre>
<h3>Example Usage</h3>
<p>This example in based on the example usage provided above. Be sure to change <code>$redux_demo</code> to the value you specified in your <a title="opt_name" href="/redux-framework/arguments/opt_name/"><code>opt_name</code> argument.</a></p>
<pre class="brush: php; title: ; notranslate">
global $redux_demo;

echo 'Switch value: ' . $redux_demo['opt-switch'];
</pre>
<p>The post <a rel="nofollow" href="https://docs.reduxframework.com/core/fields/switch/">Switch</a> appeared first on <a rel="nofollow" href="https://docs.reduxframework.com">Redux Documentation</a>.</p>
]]></content:encoded>
			</item>
	</channel>
</rss>
